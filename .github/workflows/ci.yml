on:
  push:
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
      - "**.toml"
      - "**.md"
  pull_request:
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
      - "**.toml"
      - "**.md"
  workflow_dispatch:

name: CI

env:
  POETRY_VERSION: "1.8.3"
  PYTHON_VERSION: "3.8.18"
  TWINE_USERNAME: __token__
  TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install
      - name: Run flake8
        run: poetry run flake8 --config .flake8 $(git ls-files "*.pyi")
  format:
    name: Validate formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black --diff --check $(git ls-files '*.pyi')
  type:
    name: Validate type checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install
      - name: Run mypy
        run: poetry run mypy --explicit-package-bases $(git ls-files "*.pyi")
  push:
    name: Push to PyPi
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: [lint, format, type]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install
      - name: Build
        run: poetry run python setup.py sdist bdist_wheel
      - name: Verify
        run: poetry run twine check dist/*
      - name: Upload
        run: poetry run twine upload dist/*
